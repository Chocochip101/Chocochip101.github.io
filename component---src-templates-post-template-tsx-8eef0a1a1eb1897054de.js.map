{"version":3,"file":"component---src-templates-post-template-tsx-8eef0a1a1eb1897054de.js","mappings":"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","sources":["webpack://Chocochip-Blog/./src/layout/BaseLayout.tsx","webpack://Chocochip-Blog/./src/layout/PostLayout.tsx","webpack://Chocochip-Blog/./src/components/Common/Avatar.tsx","webpack://Chocochip-Blog/./src/components/Detail/AuthorInfo.tsx","webpack://Chocochip-Blog/./src/components/Controls/Tooltip.tsx","webpack://Chocochip-Blog/./src/components/Detail/ContentHead.tsx","webpack://Chocochip-Blog/./src/components/Detail/ContentBody.tsx","webpack://Chocochip-Blog/./src/components/Detail/CommentWidget.tsx","webpack://Chocochip-Blog/./src/templates/post_template.tsx"],"sourcesContent":["import {Global, ThemeProvider} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport {globalStyle} from 'styles';\nimport Footer from 'components/Navigation/Footer';\nimport Header from 'components/Navigation/Header';\nimport {theme} from 'theme/index';\nimport {mediaQuery} from 'theme/breakpoints';\nimport {Helmet} from 'react-helmet';\n\nconst Body = styled.main`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: center;\n\n    max-width: 1200px;\n    width: 100%;\n    min-height: calc(100vh - 80px); // minus footer height\n    height: 100%;\n    padding: 0px 40px;\n    padding-top: 72px; // padding to header height\n    margin: 0 auto;\n    background-color: ${({theme}) => theme.lightTheme.backgroundColor};\n    transition: all 0.5s ease-in-out;\n\n    ${mediaQuery.sm} {\n        padding: 40px 0px;\n        padding-top: 72px;\n    }\n`;\n\ntype BaseLayoutProps = {\n    path: string;\n    children: React.ReactNode;\n    meta?: {\n        title: string;\n        description: string;\n        image: string;\n        url: string;\n    };\n};\n\nconst INITIAL_META = {\n    title: 'Chocochip Blog',\n    description: \"Chocochips Tech Blog\",\n    image: '/static/og-image.jpeg',\n    url: 'https://chocochip.co.kr/',\n};\n\nconst BaseLayout = ({path, children, meta}: BaseLayoutProps) => {\n    return (\n        <ThemeProvider theme={theme}>\n            <Helmet>\n                <html lang=\"ko\"/>\n                <title>{meta ? meta.title : INITIAL_META.title}</title>\n                <meta\n                    name=\"description\"\n                    content={meta ? meta.description : INITIAL_META.description}\n                />\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n                <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/>\n\n                <meta property=\"og:type\" content=\"website\"/>\n                <meta\n                    property=\"og:title\"\n                    content={meta ? meta.title : INITIAL_META.title}\n                />\n                <meta\n                    property=\"og:description\"\n                    content={meta ? meta.description : INITIAL_META.description}\n                />\n                <meta\n                    property=\"og:image\"\n                    content={INITIAL_META.image}\n                />\n                <meta property=\"og:url\" content={meta ? meta.url : INITIAL_META.url}/>\n                <meta\n                    property=\"og:site_name\"\n                    content={meta ? meta.title : INITIAL_META.title}\n                />\n                <meta\n                    name=\"google-site-verification\"\n                    content=\"AeVWzvBApSe4tJz0xn1wSTpJBQJb-QLALeMbZ3y9yV4\"\n                />\n            </Helmet>\n            <Global styles={globalStyle}/>\n            <Header path={path}/>\n            <Body>{children}</Body>\n            <Footer/>\n        </ThemeProvider>\n    );\n};\n\nexport default BaseLayout;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { mediaQuery } from 'theme/breakpoints';\n\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  max-width: 960px;\n  width: 100%;\n  height: 100%;\n  padding: 80px 0px;\n  transition: all 0.5s ease-in-out;\n  ${mediaQuery.sm} {\n    padding: 40px 24px;\n    padding-bottom: 60px;\n  }\n`;\n\nconst PostLayout = ({ children }: { children: React.ReactNode }) => {\n  return <PostWrapper>{children}</PostWrapper>;\n};\n\nexport default PostLayout;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nconst Rounded = styled.div`\n  border-radius: 100px;\n  overflow: hidden;\n  isolation: isolate;\n`;\n\nconst Avatar = () => {\n  return (\n    <Rounded>\n      <StaticImage\n        style={{\n          width: '40px',\n          height: '40px',\n          borderRadius: '100px',\n          objectFit: 'contain',\n        }}\n        loading=\"lazy\"\n        src=\"../../images/g_avatar.png\"\n        alt=\"avatar\"\n      />\n    </Rounded>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Avatar from '../Common/Avatar';\nimport { Body, Caption } from 'styles/typography';\nimport { theme } from 'theme/index';\n\nconst AuthorBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  margin-left: 12px;\n`;\n\ninterface AuthorInfoProps {\n  date: string;\n  author: string;\n}\n\nconst AuthorInfo = ({ date, author }: AuthorInfoProps) => {\n  return (\n    <AuthorBox>\n      <Avatar />\n      <Info>\n        <Body\n          medium\n          textColor={theme.colors.dark[100]}\n          style={{ marginBottom: 2 }}\n        >\n          {author}\n        </Body>\n        <Caption textColor={theme.colors.light[500]}>{date}</Caption>\n      </Info>\n    </AuthorBox>\n  );\n};\n\nexport default AuthorInfo;\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst TooltipWrapper = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    :hover {\n        .tooltip {\n            visibility: visible;\n        }\n    }\n`;\n\nconst TooltipBox = styled.div<{ isCopied?: boolean }>`\n    visibility: hidden;\n    position: absolute;\n    bottom: -36px;\n    padding: 4px 10px;\n    border-radius: 6px;\n    background-color: ${({isCopied}) =>\n            isCopied ? 'rgba(0, 255, 0, 0.2)' : 'rgba(113, 119, 132, 0.2)'};\n    color: ${({theme, isCopied}) =>\n            isCopied ? '#008000' : theme.colors.bluegray[500]};\n    ${({theme}) => theme.fonts.type.caption2};\n    text-align: center;\n    transition: background-color 0.2s ease, color 0.2s ease;\n`;\n\ninterface TooltipProps {\n    children: React.ReactNode;\n    tip: string;\n    width?: number;\n    isCopied?: boolean;\n}\n\nconst Tooltip = ({width, children, tip, isCopied}: TooltipProps) => {\n    return (\n        <TooltipWrapper>\n            {children}\n            <TooltipBox style={{width}} className=\"tooltip\" isCopied={isCopied}>\n                {tip}\n            </TooltipBox>\n        </TooltipWrapper>\n    );\n};\n\nexport default Tooltip;","import styled from '@emotion/styled';\nimport React, {useState} from 'react';\nimport {Headline2} from 'styles/typography';\nimport AuthorInfo from './AuthorInfo';\nimport IconButton from '../Controls/IconButton';\nimport Tooltip from '../Controls/Tooltip';\n\nconst HeadWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    padding-bottom: 20px;\n    margin-bottom: 20px;\n`;\n\nconst ToolBar = styled.div`\n    width: 100%;\n    margin-top: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nconst IconBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n`;\n\nconst Margin = styled.div`\n    margin-right: 8px;\n`;\n\ninterface ContentHeadProps {\n    title: string;\n    date: string;\n}\n\nconst ContentHead = ({title, date}: ContentHeadProps) => {\n    const [isCopied, setIsCopied] = useState(false);\n    const [isShared, setIsShared] = useState(false);\n\n    const copyToClipBoard = () => {\n        navigator.clipboard.writeText(window.location.href);\n        setIsCopied(true);\n        setTimeout(() => setIsCopied(false), 2000); // 2초 후 원래 상태로\n    };\n\n    const shareContent = async () => {\n        const shareData = {\n            title: title, // 페이지 제목\n            text: '이 페이지를 확인해보세요!', // 공유 메시지\n            url: window.location.href, // 현재 URL\n        };\n\n        if (navigator.share && typeof navigator.share === 'function') {\n            try {\n                await navigator.share(shareData);\n                setIsShared(true);\n                setTimeout(() => setIsShared(false), 2000);\n            } catch (err) {\n                console.error('공유 실패:', err);\n            }\n        } else {\n            navigator.clipboard.writeText(window.location.href);\n            setIsShared(true);\n            setTimeout(() => setIsShared(false), 2000);\n        }\n    };\n\n    return (\n        <HeadWrapper>\n            <Headline2>{title}</Headline2>\n            <ToolBar>\n                <a\n                    href=\"https://github.com/Chocochip101\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <AuthorInfo author=\"초코칩\" date={date}/>\n                </a>\n                <IconBox>\n                    <Tooltip width={108} tip={isShared ? \"공유됨\" : \"공유하기\"} isCopied={isShared}>\n                        <IconButton\n                            size=\"xs\"\n                            icon=\"share\"\n                            onClick={shareContent}\n                            isCopied={isShared}\n                        />\n                    </Tooltip>\n                    <Margin/>\n                    <Tooltip\n                        width={108}\n                        tip={isCopied ? \"복사됨\" : \"클립보드로 복사\"}\n                        isCopied={isCopied}\n                    >\n                        <IconButton\n                            size=\"xs\"\n                            icon=\"link\"\n                            onClick={copyToClipBoard}\n                            isCopied={isCopied}\n                        />\n                    </Tooltip>\n                </IconBox>\n            </ToolBar>\n        </HeadWrapper>\n    );\n};\n\nexport default ContentHead;","import React from 'react';\nimport styled from '@emotion/styled';\nimport { mediaQuery } from '../../theme';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\n\ninterface ContentBodyProps {\n  html: string;\n  thumbnail: IGatsbyImageData;\n}\n\nconst ImageWrapper = styled.div`\n  margin: 0 auto;\n  margin-bottom: 40px;\n  border-radius: 20px;\n  overflow: hidden;\n  isolation: isolate;\n\n  ${mediaQuery.sm} {\n    margin-bottom: 20px;\n  }\n`;\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  word-break: keep-all;\n\n  // Markdown Style\n  line-height: 1.75;\n  font-size: 16px;\n  font-weight: 400;\n  color: ${({ theme }) => theme.colors.bluegray[600]};\n\n  h1,\n  h2,\n  h3 {\n    margin-bottom: 16px;\n  }\n\n  * + h1 {\n    margin-top: 60px;\n  }\n  * + h2,\n  * + h3 {\n    margin-top: 40px;\n  }\n\n  h1 + h2,\n  h2 + h3 {\n    margin-top: 12px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  // Adjust Heading Element Style\n  h1 {\n    ${({ theme }) => theme.fonts.type.heading1};\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n    ${mediaQuery.sm} {\n      ${({ theme }) => theme.fonts.type.heading1mobile};\n    }\n  }\n  h2 {\n    font-size: 28px;\n    font-weight: 700;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n    ${mediaQuery.sm} {\n      font-size: 22px;\n    }\n  }\n  h3 {\n    font-size: 22px;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n    font-weight: 600;\n    ${mediaQuery.sm} {\n      ${({ theme }) => theme.fonts.type.title};\n      font-weight: 600;\n    }\n  }\n\n  // Apply Padding Attribute to All Elements\n  p {\n    margin: 8px 0;\n    font-weight: 400;\n    color: ${({ theme }) => theme.colors.bluegray[600]};\n  }\n  strong {\n    font-weight: 600;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-top: 10px;\n    margin-left: 20px;\n    padding-left: 16px;\n    line-height: 2;\n  }\n  ol > li {\n    color: ${({ theme }) => theme.colors.bluegray[700]};\n    list-style: decimal;\n    padding-left: 2px;\n  }\n  ul > li {\n    color: ${({ theme }) => theme.colors.bluegray[700]};\n    list-style: disc;\n    ul > li {\n      list-style: circle;\n      ul > li {\n        list-style: square;\n        ul > li {\n          list-style: outside;\n        }\n      }\n    }\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 16px 0;\n    padding: 20px;\n    border-left: 4px solid ${({ theme }) => theme.colors.bluegray[300]};\n    background-color: ${({ theme }) => theme.colors.bluegray[50]};\n    & p {\n      margin: 0;\n      color: ${({ theme }) => theme.colors.bluegray[500]};\n    }\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px dashed ${({ theme }) => theme.colors.bluegray[150]};\n    margin: 60px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: ${({ theme }) => theme.colors.secondary[600]};\n    font-weight: 500;\n\n    strong {\n      color: ${({ theme }) => theme.colors.secondary[600]};\n    }\n\n    :hover {\n      text-decoration: underline;\n      text-decoration-style: double;\n      color: ${({ theme }) => theme.colors.secondary[800]};\n    }\n  }\n\n  // Adjust Summary Element Style\n  summary {\n    margin: 16px 0px;\n    ::marker {\n      color: ${({ theme }) => theme.colors.primary[100]};\n    }\n    & strong {\n      padding: 2px;\n      :hover {\n        text-decoration: underline;\n        text-decoration-style: wavy;\n        text-decoration-color: ${({ theme }) => theme.colors.primary[100]};\n      }\n    }\n  }\n\n  // Adjust Table Element Style\n  table {\n    margin: 20px 0px;\n    border-collapse: separate;\n    border-spacing: 0;\n    border: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n  }\n\n  thead {\n    background-color: ${({ theme }) => theme.colors.bluegray[150]};\n    th {\n      border-right: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n      border-bottom: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n      padding: 16px;\n      font-weight: 500;\n      color: ${({ theme }) => theme.colors.bluegray[800]};\n    }\n  }\n\n  td {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n    border-right: 1px solid ${({ theme }) => theme.colors.bluegray[300]};\n    padding: 16px;\n    font-weight: 400;\n    color: ${({ theme }) => theme.colors.bluegray[800]};\n  }\n  tr:last-child {\n    td {\n      border-bottom: 0px;\n    }\n  }\n\n  td:last-child,\n  th:last-child {\n    border-right: 0px;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 20px 0;\n    padding: 16px 20px;\n    font-size: 15px;\n    border-radius: 8px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n\n  code[class*='language-text'] {\n    background-color: ${({ theme }) => theme.colors.primary[600]};\n    color: ${({ theme }) => theme.colors.primary.default};\n    border: 1.5px dashed ${({ theme }) => theme.colors.primary.default};\n    padding: 2px 4px;\n    margin: 0px 4px;\n    font-size: 14px;\n  }\n\n  pre > code[class*='language-text'] {\n    background-color: #2d2d2d;\n    border: 0px;\n    font-size: 15px;\n    color: ${({ theme }) => theme.colors.light[300]};\n  }\n`;\n\nconst ContentBody = ({ thumbnail, html }: ContentBodyProps) => {\n  return (\n    <>\n      <ImageWrapper>\n        <GatsbyImage\n          loading=\"lazy\"\n          style={{\n            width: '100%',\n            height: 'auto',\n            objectFit: 'contain',\n            borderRadius: '20px',\n          }}\n          image={thumbnail}\n          alt=\"thumbnail\"\n        />\n      </ImageWrapper>\n      <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n    </>\n  );\n};\n\nexport default ContentBody;\n","import styled from '@emotion/styled';\nimport React, { createRef, FunctionComponent, useEffect } from 'react';\n\nconst CommentBox = styled.div`\n  width: 100%;\n  margin-top: 60px;\n  border-top: 2px solid ${({ theme }) => theme.colors.bluegray[300]};\n  padding-top: 60px;\n  .giscus {\n    max-width: 960px;\n    width: 100%;\n  }\n`;\n\ntype GiscusAttributesType = {\n  src: string;\n  'data-repo': string;\n  'data-repo-id': string;\n  'data-category': string;\n  'data-category-id': string;\n  'data-mapping': string;\n  'data-strict': string;\n  'data-reactions-enabled': string;\n  'data-emit-metadata': string;\n  'data-input-position': string;\n  'data-theme': string;\n  'data-lang': string;\n  crossorigin: string;\n  async: string;\n};\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (element.current === null) return;\n\n    const giscus: HTMLScriptElement = document.createElement('script');\n\n    const attributes: GiscusAttributesType = {\n      src: 'https://giscus.app/client.js',\n      'data-repo': 'Chocochip101/Chocochip101.github.io',\n      'data-repo-id': 'R_kgDONvU42Q',\n      'data-category': 'Comments',\n      'data-category-id': 'DIC_kwDONvU42c4CmWbF',\n      'data-mapping': 'pathname',\n      'data-strict': '0',\n      'data-reactions-enabled': '1',\n      'data-emit-metadata': '0',\n      'data-input-position': 'bottom',\n      'data-theme': 'light',\n      'data-lang': 'ko',\n      crossorigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      giscus.setAttribute(key, value);\n    });\n\n    element.current.appendChild(giscus);\n  }, []);\n\n  return <CommentBox ref={element} />;\n};\n\nexport default CommentWidget;\n","import React, { FunctionComponent } from 'react';\nimport BaseLayout from 'layout/BaseLayout';\nimport PostLayout from 'layout/PostLayout';\nimport ContentHead from 'components/Detail/ContentHead';\nimport ContentBody from 'components/Detail/ContentBody';\nimport CommentWidget from 'components/Detail/CommentWidget';\nimport { graphql } from 'gatsby';\n\ntype PostTemplateProps = {\n  path: string;\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[];\n    };\n  };\n  location: {\n    href: string;\n  };\n};\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  path,\n  data,\n  location,\n}: PostTemplateProps) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        tags,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = data.allMarkdownRemark.edges[0];\n\n  return (\n    <BaseLayout\n      path={'/'}\n      meta={{\n        title,\n        description: summary,\n        url: location.href,\n        image: publicURL,\n      }}\n    >\n      <PostLayout>\n        <ContentHead title={title} date={date} thumbnail={gatsbyImageData} />\n        <ContentBody html={html} thumbnail={gatsbyImageData} />\n        <CommentWidget />\n      </PostLayout>\n    </BaseLayout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY년 MM월 DD일 HH:mm\")\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Body","_styled","target","_ref","theme","lightTheme","backgroundColor","mediaQuery","INITIAL_META","_ref2","path","children","meta","___EmotionJSX","ThemeProvider","Helmet","lang","title","name","content","description","httpEquiv","property","url","Global","styles","globalStyle","Header","Footer","PostWrapper","Rounded","Avatar","StaticImage","style","width","height","borderRadius","objectFit","loading","src","alt","__imageData","require","AuthorBox","Info","date","author","medium","textColor","marginBottom","Caption","TooltipWrapper","TooltipBox","isCopied","colors","bluegray","_ref3","fonts","type","caption2","_ref4","tip","className","HeadWrapper","ToolBar","IconBox","Margin","setIsCopied","useState","isShared","setIsShared","Headline2","href","rel","AuthorInfo","Tooltip","IconButton","size","icon","onClick","async","shareData","text","window","location","navigator","share","setTimeout","err","console","error","clipboard","writeText","copyToClipBoard","ImageWrapper","MarkdownRenderer","heading1","heading1mobile","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","secondary","_ref17","_ref18","_ref19","primary","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","default","_ref31","_ref32","light","_ref33","thumbnail","html","React","GatsbyImage","image","dangerouslySetInnerHTML","__html","CommentBox","element","createRef","useEffect","current","giscus","document","createElement","Object","entries","crossorigin","forEach","key","value","setAttribute","appendChild","ref","data","node","frontmatter","summary","tags","childImageSharp","gatsbyImageData","publicURL","allMarkdownRemark","edges","BaseLayout","PostLayout","ContentHead","ContentBody","CommentWidget"],"sourceRoot":""}