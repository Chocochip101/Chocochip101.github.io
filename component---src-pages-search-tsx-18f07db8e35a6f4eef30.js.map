{"version":3,"file":"component---src-pages-search-tsx-18f07db8e35a6f4eef30.js","mappings":"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","sources":["webpack://Chocochip-Blog/./src/layout/SearchLayout.tsx","webpack://Chocochip-Blog/./src/pages/search.tsx"],"sourcesContent":["import { Global, ThemeProvider } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { globalStyle } from 'styles';\nimport Footer from 'components/Navigation/Footer';\nimport Header from 'components/Navigation/Header';\nimport { theme, mediaQuery } from 'theme/index';\n\nconst Body = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: calc(100vh - 80px); // minus footer height\n  height: 100%;\n  padding: 0px 40px;\n  padding-top: 72px; // padding to header height\n  margin: 0 auto;\n  background-color: ${({ theme }) => theme.colors.light[50]};\n  transition: all 0.5s ease-in-out;\n\n  ${mediaQuery.sm} {\n    padding: 40px 0px;\n    padding-top: 72px;\n  }\n`;\n\ntype SearchProps = {\n  path: string;\n  children: React.ReactNode;\n};\n\nconst Search = ({ path, children }: SearchProps) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Global styles={globalStyle} />\n      <Header path={path} />\n      <Body>{children}</Body>\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nexport default Search;\n","import React, {useState} from 'react';\nimport {PATH} from 'routes/path';\nimport SearchLayout from '../layout/SearchLayout';\nimport {Body, Guidance1, Guidance2, Subtitle} from 'styles/typography';\nimport styled from '@emotion/styled';\nimport {mediaQuery, theme} from '../theme';\nimport {TagListProps} from 'components/Post/TagMenu';\nimport {PostType} from 'types/Post.types';\nimport {graphql, Link, navigate} from 'gatsby';\n\nconst Container = styled.div`\n    max-width: 480px;\n    text-align: left;\n\n    ${mediaQuery.sm} {\n        max-width: 320px;\n    }\n`;\n\nconst KeywordWrapper = styled.div`\n    padding: 40px 0px;\n`;\n\nconst KeywordBox = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    padding-top: 12px;\n`;\n\nconst Keyword = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 30px;\n    margin: 8px 0px;\n    margin-right: 16px;\n    padding: 2px 12px;\n    border: 1px solid ${({theme}) => theme.colors.light[300]};\n    border-radius: 100px;\n\n    :hover {\n        background-color: ${({theme}) => theme.colors.primary.default};\n        border: 1px solid ${({theme}) => theme.colors.primary.default};\n\n        & p {\n            color: white !important;\n        }\n    }\n`;\n\nconst SearchContainer = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-top: 16px;\n`;\n\nconst SearchInput = styled.input`\n    flex: 1;\n    height: 40px;\n    padding: 0 12px;\n    border: 1px solid ${({theme}) => theme.colors.light[300]};\n    border-radius: 8px;\n    font-size: 16px;\n    color: ${({theme}) => theme.colors.dark[100]};\n\n    &:focus {\n        outline: none;\n        border-color: ${({theme}) => theme.colors.primary.default};\n        box-shadow: 0 0 4px ${({theme}) => theme.colors.primary.default};\n    }\n\n    ${mediaQuery.sm} {\n        font-size: 14px;\n    }\n`;\n\nconst SearchButton = styled.button`\n    height: 40px;\n    padding: 0 16px;\n    background-color: ${({theme}) => theme.colors.primary.default};\n    color: white;\n    border: none;\n    border-radius: 8px;\n    font-size: 16px;\n    cursor: pointer;\n\n    &:hover {\n        background-color: ${({theme}) => theme.colors.primary.default};\n    }\n\n    ${mediaQuery.sm} {\n        font-size: 14px;\n    }\n`;\n\ntype SearchPageProps = {\n    data: {\n        allMarkdownRemark: {\n            edges: PostType[];\n        };\n    };\n};\n\nconst search = ({\n                    data: {\n                        allMarkdownRemark: {edges},\n                    },\n                }: SearchPageProps) => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const handleSearch = () => {\n        if (searchTerm.trim() === '') return;\n        navigate(`/?tag=${encodeURIComponent(searchTerm)}`);\n    };\n\n    const tagList = React.useMemo(\n        () =>\n            edges.reduce(\n                (\n                    list: TagListProps['categories'],\n                    {\n                        node: {\n                            frontmatter: {tags},\n                        },\n                    }: PostType,\n                ) => {\n                    tags.forEach(tag => {\n                        if (list[tag] === undefined) list[tag] = 1;\n                        else list[tag]++;\n                    });\n\n                    list['All']++;\n\n                    return list;\n                },\n                {All: 0},\n            ),\n        [edges],\n    );\n\n    return (\n        <SearchLayout path={PATH.search}>\n            <Container>\n                <Guidance1>안녕하세요,</Guidance1>\n                <Guidance2>무엇을 찾으시나요?</Guidance2>\n                <SearchContainer>\n                    <SearchInput\n                        placeholder=\"검색할 태그를 입력하세요\"\n                        value={searchTerm}\n                        onChange={e => setSearchTerm(e.target.value)}\n                        onKeyPress={e => e.key === 'Enter' && handleSearch()}\n                    />\n                    <SearchButton onClick={handleSearch}>검색</SearchButton>\n                </SearchContainer>\n                <KeywordWrapper>\n                    <Subtitle medium textColor={theme.colors.primary.default}>\n                        추천 키워드\n                    </Subtitle>\n                    <KeywordBox>\n                        {Object.entries(tagList).map(([key, value]) => (\n                            <Link to={`/?tag=${key}`} key={key}>\n                                <Keyword>\n                                    <Body medium textColor={theme.colors.dark[100]}>\n                                        {key} ({value})\n                                    </Body>\n                                </Keyword>\n                            </Link>\n                        ))}\n                    </KeywordBox>\n                </KeywordWrapper>\n            </Container>\n        </SearchLayout>\n    );\n};\n\nexport default search;\n\nexport const searchContentQuery = graphql`\n  query searchContentQuery {\n    allMarkdownRemark(\n      sort: [{ frontmatter: { date: DESC } }, { frontmatter: { title: ASC } }]\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 700)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Body","_styled","target","_ref","theme","colors","light","mediaQuery","_ref2","path","children","___EmotionJSX","ThemeProvider","Global","styles","globalStyle","Header","Footer","Container","KeywordWrapper","name","KeywordBox","Keyword","primary","default","_ref3","SearchContainer","SearchInput","_ref4","_ref5","dark","_ref6","_ref7","SearchButton","_ref8","_ref9","_ref10","data","allMarkdownRemark","edges","searchTerm","setSearchTerm","useState","handleSearch","trim","navigate","encodeURIComponent","tagList","React","reduce","list","_ref11","node","frontmatter","tags","forEach","tag","undefined","All","SearchLayout","PATH","Guidance1","Guidance2","placeholder","value","onChange","e","onKeyPress","key","onClick","Subtitle","medium","textColor","Object","entries","map","_ref12","Link","to"],"sourceRoot":""}