{"version":3,"file":"component---src-pages-retrospectives-tsx-5ff5e199865e10f87098.js","mappings":"iLA+DA,UAhC2BA,IAYuB,IAX3BC,UAAU,OAACC,GACXC,MACIC,MACIC,cAAc,MAACC,EAAK,YAAEC,EAAW,QAAEC,IAEvCC,mBAAmB,MAACC,GACpBC,MACIC,iBAAiB,gBAACC,GAAgB,UAClCC,KAGcd,EACzC,MAAOe,EAASC,GAAcC,EAAAA,UAAwB,GAMtD,OAJAA,EAAAA,WAAgB,KACZD,GAAW,EAAK,GACjB,IAGCD,IACIG,EAAAA,EAAAA,IAACC,EAAAA,EAAU,CACPC,KAAMC,EAAAA,EAAAA,QACNC,KAAM,CAAChB,QAAOC,cAAagB,IAAKf,EAASgB,MAAOV,KAGhDI,EAAAA,EAAAA,IAACO,EAAAA,EAAI,CAACC,MAAOhB,EAAOiB,YAAa,OAExC,C","sources":["webpack://Chocochip-Blog/./src/pages/retrospectives.tsx"],"sourcesContent":["import * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {IGatsbyImageData} from 'gatsby-plugin-image';\nimport queryString, {ParsedQuery} from 'query-string';\nimport {PostType} from 'types/Post.types';\nimport {PATH} from '../routes/path';\nimport BaseLayout from 'layout/BaseLayout';\nimport Blog from 'components/Blog';\n\ntype RetrospectivesPageProps = {\n    location: { search: string };\n    data: {\n        site: {\n            siteMetadata: {\n                title: string;\n                description: string;\n                siteUrl: string;\n            };\n        };\n        allMarkdownRemark: {\n            edges: PostType[];\n        };\n        file: {\n            childImageSharp: {\n                gatsbyImageData: IGatsbyImageData;\n            };\n            publicURL: string;\n        };\n    };\n};\n\nconst RetrospectivesPage = ({\n                       location: {search},\n                       data: {\n                           site: {\n                               siteMetadata: {title, description, siteUrl},\n                           },\n                           allMarkdownRemark: {edges},\n                           file: {\n                               childImageSharp: {gatsbyImageData},\n                               publicURL,\n                           },\n                       },\n                   }: RetrospectivesPageProps) => {\n    const [mounted, setMounted] = React.useState<boolean>(false);\n\n    React.useEffect(() => {\n        setMounted(true);\n    }, []);\n\n    return (\n        mounted && (\n            <BaseLayout\n                path={PATH.reviews}\n                meta={{title, description, url: siteUrl, image: publicURL}}\n            >\n                {/* Blog */}\n                <Blog posts={edges} selectedTag={\"회고\"}/>\n            </BaseLayout>\n        )\n    );\n};\n\nexport default RetrospectivesPage;\n\nexport const postContentQuery = graphql`\n  query postContentQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n        filter: { frontmatter: { tags: { in: [\"회고\"] } } }\n        sort: [{ frontmatter: { date: DESC } }, { frontmatter: { title: ASC } }]\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 700)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n    }\n  }\n`;\n"],"names":["_ref","location","search","data","site","siteMetadata","title","description","siteUrl","allMarkdownRemark","edges","file","childImageSharp","gatsbyImageData","publicURL","mounted","setMounted","React","___EmotionJSX","BaseLayout","path","PATH","meta","url","image","Blog","posts","selectedTag"],"sourceRoot":""}