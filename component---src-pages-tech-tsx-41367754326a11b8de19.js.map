{"version":3,"file":"component---src-pages-tech-tsx-41367754326a11b8de19.js","mappings":"gLA+DA,UAjCiBA,IAYwB,IAXnBC,UAAU,OAACC,GACXC,MACEC,MACEC,cAAc,MAACC,EAAK,YAAEC,EAAW,QAAEC,IAErCC,mBAAmB,MAACC,GACpBC,MACEC,iBAAiB,gBAACC,GAAgB,UAClCC,KAGUd,EAClC,MAAOe,EAASC,GAAcC,EAAAA,UAAwB,GAOtD,OALAA,EAAAA,WAAgB,KACdD,GAAW,EAAK,GACf,IAIDD,IACEG,EAAAA,EAAAA,IAACC,EAAAA,EAAU,CACTC,KAAMC,EAAAA,EAAAA,KACNC,KAAM,CAAEhB,QAAOC,cAAagB,IAAKf,EAASgB,MAAOV,KAGjDI,EAAAA,EAAAA,IAACO,EAAAA,EAAI,CAACC,MAAOhB,EAAOiB,YAAa,SAEpC,C","sources":["webpack://Chocochip-Blog/./src/pages/tech.tsx"],"sourcesContent":["import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport { PostType } from 'types/Post.types';\nimport { PATH } from 'routes/path';\nimport BaseLayout from 'layout/BaseLayout';\nimport Blog from 'components/Blog';\n\ntype TechPageProps = {\n  location: { search: string };\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: PostType[];\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n      publicURL: string;\n    };\n  };\n};\n\nconst TechPage = ({\n                      location: {search},\n                      data: {\n                        site: {\n                          siteMetadata: {title, description, siteUrl},\n                        },\n                        allMarkdownRemark: {edges},\n                        file: {\n                          childImageSharp: {gatsbyImageData},\n                          publicURL,\n                        },\n                      },\n                    }: TechPageProps) => {\n  const [mounted, setMounted] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n\n\n  return (\n    mounted && (\n      <BaseLayout\n        path={PATH.tech}\n        meta={{ title, description, url: siteUrl, image: publicURL }}\n      >\n        {/* Blog */}\n        <Blog posts={edges} selectedTag={\"tech\"} />\n      </BaseLayout>\n    )\n  );\n};\n\nexport default TechPage;\nexport const postContentQuery = graphql`\n  query postContentQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n        filter: { frontmatter: { tags: { in: [\"tech\"] } } }\n        sort: [{ frontmatter: { date: DESC } }, { frontmatter: { title: ASC } }]\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 700)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n    }\n  }\n`;\n"],"names":["_ref","location","search","data","site","siteMetadata","title","description","siteUrl","allMarkdownRemark","edges","file","childImageSharp","gatsbyImageData","publicURL","mounted","setMounted","React","___EmotionJSX","BaseLayout","path","PATH","meta","url","image","Blog","posts","selectedTag"],"sourceRoot":""}